generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["interactiveTransactions"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Pessoa {
    id                  Int                 @id @default(autoincrement())
    email               String              @unique
    senha               String
    nome_exibicao       String
    nome_completo       String
    atualizado_em       DateTime            @default(now()) @db.Timestamptz(6)
    atualizado_por      Int?
    criado_em           DateTime            @default(now()) @db.Timestamptz(6)
    criado_por          Int?
    qtde_senha_invalida Int                 @default(0)
    senha_atualizada_em DateTime?           @default(now()) @db.Timestamptz(6)
    senha_bloqueada     Boolean             @default(false)
    senha_bloqueada_em  DateTime?           @default(now()) @db.Timestamptz(6)
    desativado          Boolean             @default(false)
    desativado_em       DateTime?
    desativado_por      Int?
    desativado_motivo   String?
    pessoa_fisica_id    Int?
    atualizador         Pessoa?             @relation("AtualizadorPessoas", fields: [atualizado_por], references: [id])
    criador             Pessoa?             @relation("CriadorPessoas", fields: [criado_por], references: [id])
    desativador         Pessoa?             @relation("DesativadorPessoas", fields: [desativado_por], references: [id])
    pessoa_fisica       PessoaFisica?       @relation(fields: [pessoa_fisica_id], references: [id])
    PessoasQueAtualizei Pessoa[]            @relation("AtualizadorPessoas")
    PessoasQueCriei     Pessoa[]            @relation("CriadorPessoas")
    PessoasQueDesativei Pessoa[]            @relation("DesativadorPessoas")
    PessoaPerfil        PessoaPerfil[]
    PessoaSessoesAtivas PessoaSessaoAtiva[]

    OrgaoQueCriei     Orgao[] @relation("Criador")
    OrgaoQueRemovi    Orgao[] @relation("Removedor")
    OrgaoQueAtualizei Orgao[] @relation("Atualizador")

    TipoOrgaoQueCriei     TipoOrgao[] @relation("Criador")
    TipoOrgaoQueRemovi    TipoOrgao[] @relation("Removedor")
    TipoOrgaoQueAtualizei TipoOrgao[] @relation("Atualizador")

    OdsQueCriei     Ods[] @relation("Criador")
    OdsQueRemovi    Ods[] @relation("Removedor")
    OdsQueAtualizei Ods[] @relation("Atualizador")

    SubTemaQueCriei     SubTema[] @relation("Criador")
    SubTemaQueRemovi    SubTema[] @relation("Removedor")
    SubTemaQueAtualizei SubTema[] @relation("Atualizador")

    EixoQueCriei     MacroTema[] @relation("Criador")
    EixoQueRemovi    MacroTema[] @relation("Removedor")
    EixoQueAtualizei MacroTema[] @relation("Atualizador")

    PDMQueCriei     Pdm[] @relation("Criador")
    PDMQueDesativei Pdm[] @relation("Desativador")
    PDMQueAtualizei Pdm[] @relation("Atualizador")

    OEQueCriei     Tema[] @relation("Criador")
    OEQueDesativei Tema[] @relation("Removedor")
    OEQueAtualizei Tema[] @relation("Atualizador")

    TagQueCriei     Tag[] @relation("Criador")
    TagQueDesativei Tag[] @relation("Removedor")
    TagQueAtualizei Tag[] @relation("Atualizador")

    FRQueCriei     FonteRecurso[] @relation("Criador")
    FRQueDesativei FonteRecurso[] @relation("Removedor")
    FRQueAtualizei FonteRecurso[] @relation("Atualizador")

    TipoDocQueCriei     TipoDocumento[] @relation("Criador")
    TipoDocQueDesativei TipoDocumento[] @relation("Removedor")
    TipoDocQueAtualizei TipoDocumento[] @relation("Atualizador")

    RegiaoQueCriei     Regiao[] @relation("Criador")
    RegiaoQueDesativei Regiao[] @relation("Removedor")
    RegiaoQueAtualizei Regiao[] @relation("Atualizador")

    ArquivoQueCriei Arquivo[] @relation("Criador")

    ArquivoDocQueCriei     ArquivoDocumento[] @relation("Criador")
    ArquivoDocQueDesativei ArquivoDocumento[] @relation("Removedor")
    ArquivoDocQueAtualizei ArquivoDocumento[] @relation("Atualizador")

    MetaQueCriei     Meta[] @relation("Criador")
    MetaQueDesativei Meta[] @relation("Desativador")
    MetaQueAtualizei Meta[] @relation("Atualizador")

    MetasQueSouResp MetaResponsavel[] @relation("MetaPessoaResp")

    @@map("pessoa")
}

model Modulo {
    id         Int          @id @default(autoincrement())
    codigo     String       @unique
    descricao  String
    privilegio Privilegio[]

    @@map("modulo")
}

model Orgao {
    id            Int            @id @default(autoincrement())
    sigla         String?
    descricao     String
    tipo_orgao_id Int
    tipo_orgao    TipoOrgao      @relation(fields: [tipo_orgao_id], references: [id])
    pessoa_fisica PessoaFisica[]

    criado_por     Int?
    criado_em      DateTime  @default(now()) @db.Timestamptz(6)
    atualizado_por Int?
    atualizado_em  DateTime  @default(now()) @db.Timestamptz(6)
    removido_por   Int?
    removido_em    DateTime? @db.Timestamptz(6)

    atualizador     Pessoa?           @relation("Atualizador", fields: [atualizado_por], references: [id])
    criador         Pessoa?           @relation("Criador", fields: [criado_por], references: [id])
    removedor       Pessoa?           @relation("Removedor", fields: [removido_por], references: [id])
    MetaOrgao       MetaOrgao[]
    MetaResponsavel MetaResponsavel[]

    @@map("orgao")
}

model PerfilAcesso {
    id                Int                @id @default(autoincrement())
    nome              String
    descricao         String?
    perfil_privilegio PerfilPrivilegio[]
    pessoa_perfil     PessoaPerfil[]

    @@map("perfil_acesso")
}

model PerfilPrivilegio {
    id               Int          @id @default(autoincrement())
    perfil_acesso_id Int
    privilegio_id    Int
    perfil_acesso    PerfilAcesso @relation(fields: [perfil_acesso_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    privilegio       Privilegio   @relation(fields: [privilegio_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

    @@unique([perfil_acesso_id, privilegio_id])
    @@map("perfil_privilegio")
}

model PessoaFisica {
    id Int @id @default(autoincrement())

    cargo                String?
    lotacao              String?
    orgao_id             Int
    orgao                Orgao    @relation(fields: [orgao_id], references: [id])
    pessoa               Pessoa[]
    registro_funcionario String?
    cpf                  String?

    @@map("pessoa_fisica")
}

model PessoaPerfil {
    id               Int          @id @default(autoincrement())
    pessoa_id        Int
    perfil_acesso_id Int
    perfil_acesso    PerfilAcesso @relation(fields: [perfil_acesso_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    pessoa           Pessoa       @relation(fields: [pessoa_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

    @@map("pessoa_perfil")
}

model PessoaSessaoAtiva {
    id        Int    @id @default(autoincrement())
    pessoa_id Int
    pessoa    Pessoa @relation(fields: [pessoa_id], references: [id])

    @@map("pessoa_sessao_ativa")
}

model Privilegio {
    id                Int                @id @default(autoincrement())
    nome              String
    codigo            String             @unique
    modulo_id         Int
    modulo            Modulo             @relation(fields: [modulo_id], references: [id])
    perfil_privilegio PerfilPrivilegio[]

    @@map("privilegio")
}

model TipoOrgao {
    id        Int     @id @default(autoincrement())
    descricao String
    orgao     Orgao[]

    criado_por     Int?
    criado_em      DateTime  @default(now()) @db.Timestamptz(6)
    atualizado_por Int?
    atualizado_em  DateTime  @default(now()) @db.Timestamptz(6)
    removido_por   Int?
    removido_em    DateTime? @db.Timestamptz(6)

    atualizador Pessoa? @relation("Atualizador", fields: [atualizado_por], references: [id])
    criador     Pessoa? @relation("Criador", fields: [criado_por], references: [id])
    removedor   Pessoa? @relation("Removedor", fields: [removido_por], references: [id])

    @@map("tipo_orgao")
}

model EmaildbConfig {
    id                       Int                     @id @default(autoincrement())
    from                     String
    template_resolver_class  String                  @db.VarChar(60)
    template_resolver_config Json                    @default("{}") @db.Json
    email_transporter_class  String                  @db.VarChar(60)
    email_transporter_config Json                    @default("{}") @db.Json
    delete_after             Unsupported("interval") @default(dbgenerated("'10 years'::interval"))
    EmaildbQueue             EmaildbQueue[]

    @@map("emaildb_config")
}

model EmaildbQueue {
    id             String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
    config_id      Int
    created_at     DateTime      @default(now()) @db.Timestamp(6)
    template       String
    to             String
    subject        String
    variables      Json          @db.Json
    sent           Boolean?
    updated_at     DateTime?     @db.Timestamp(6)
    visible_after  DateTime?     @db.Timestamp(6)
    errmsg         String?
    emaildb_config EmaildbConfig @relation(fields: [config_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

    @@map("emaildb_queue")
}

model Ods {
    id Int @id @default(autoincrement())

    numero    Int
    titulo    String
    descricao String

    criado_por     Int?
    criado_em      DateTime  @default(now()) @db.Timestamptz(6)
    atualizado_por Int?
    atualizado_em  DateTime  @default(now()) @db.Timestamptz(6)
    removido_por   Int?
    removido_em    DateTime? @db.Timestamptz(6)

    atualizador Pessoa? @relation("Atualizador", fields: [atualizado_por], references: [id])
    criador     Pessoa? @relation("Criador", fields: [criado_por], references: [id])
    removedor   Pessoa? @relation("Removedor", fields: [removido_por], references: [id])
    Tag         Tag[]

    @@map("ods")
}

model Pdm {
    id Int @id @default(autoincrement())

    nome                                  String
    descricao                             String?
    data_inicio                           DateTime? @db.Date()
    data_fim                              DateTime? @db.Date()
    data_publicacao                       DateTime? @db.Date()
    periodo_do_ciclo_participativo_inicio DateTime? @db.Date()
    periodo_do_ciclo_participativo_fim    DateTime? @db.Date()
    ativo                                 Boolean   @default(false)

    prefeito       String
    equipe_tecnica String?

    possui_macro_tema          Boolean @default(true)
    possui_tema                Boolean @default(true)
    possui_sub_tema            Boolean @default(true)
    possui_contexto_meta       Boolean @default(true)
    possui_complementacao_meta Boolean @default(true)

    rotulo_macro_tema          String @default("Macro Tema")
    rotulo_tema                String @default("Tema")
    rotulo_sub_tema            String @default("Sub Tema")
    rotulo_contexto_meta       String @default("Contexto")
    rotulo_complementacao_meta String @default("Complementação")

    criado_por     Int?
    criado_em      DateTime  @default(now()) @db.Timestamptz(6)
    atualizado_por Int?
    atualizado_em  DateTime  @default(now()) @db.Timestamptz(6)
    desativado_por Int?
    desativado_em  DateTime? @db.Timestamptz(6)

    atualizador         Pessoa?            @relation("Atualizador", fields: [atualizado_por], references: [id])
    criador             Pessoa?            @relation("Criador", fields: [criado_por], references: [id])
    desativador         Pessoa?            @relation("Desativador", fields: [desativado_por], references: [id])
    Eixo                MacroTema[]
    Tag                 Tag[]
    ObjetivoEstrategico Tema[]
    ArquivoDocumento    ArquivoDocumento[]
    SubTema             SubTema[]
    Meta                Meta[]

    @@map("pdm")
}

model MacroTema {
    id Int @id @default(autoincrement())

    descricao String

    pdm_id Int
    pdm    Pdm @relation(fields: [pdm_id], references: [id])

    criado_por     Int?
    criado_em      DateTime  @default(now()) @db.Timestamptz(6)
    atualizado_por Int?
    atualizado_em  DateTime  @default(now()) @db.Timestamptz(6)
    removido_por   Int?
    removido_em    DateTime? @db.Timestamptz(6)

    atualizador Pessoa? @relation("Atualizador", fields: [atualizado_por], references: [id])
    criador     Pessoa? @relation("Criador", fields: [criado_por], references: [id])
    removedor   Pessoa? @relation("Removedor", fields: [removido_por], references: [id])
    Meta        Meta[]

    @@map("eixo")
}

model SubTema {
    id Int @id @default(autoincrement())

    descricao String

    pdm_id Int
    pdm    Pdm @relation(fields: [pdm_id], references: [id])

    criado_por     Int?
    criado_em      DateTime  @default(now()) @db.Timestamptz(6)
    atualizado_por Int?
    atualizado_em  DateTime  @default(now()) @db.Timestamptz(6)
    removido_por   Int?
    removido_em    DateTime? @db.Timestamptz(6)

    atualizador Pessoa? @relation("Atualizador", fields: [atualizado_por], references: [id])
    criador     Pessoa? @relation("Criador", fields: [criado_por], references: [id])
    removedor   Pessoa? @relation("Removedor", fields: [removido_por], references: [id])
    Meta        Meta[]

    @@map("subtema")
}

model FonteRecurso {
    id    Int     @id @default(autoincrement())
    fonte String
    sigla String?

    criado_por     Int?
    criado_em      DateTime  @default(now()) @db.Timestamptz(6)
    atualizado_por Int?
    atualizado_em  DateTime  @default(now()) @db.Timestamptz(6)
    removido_por   Int?
    removido_em    DateTime? @db.Timestamptz(6)

    atualizador Pessoa? @relation("Atualizador", fields: [atualizado_por], references: [id])
    criador     Pessoa? @relation("Criador", fields: [criado_por], references: [id])
    removedor   Pessoa? @relation("Removedor", fields: [removido_por], references: [id])

    @@map("fonte_recurso")
}

model TipoDocumento {
    id        Int     @id @default(autoincrement())
    codigo    String
    titulo    String
    descricao String?
    extensoes String?

    criado_por     Int?
    criado_em      DateTime  @default(now()) @db.Timestamptz(6)
    atualizado_por Int?
    atualizado_em  DateTime  @default(now()) @db.Timestamptz(6)
    removido_por   Int?
    removido_em    DateTime? @db.Timestamptz(6)

    atualizador Pessoa?   @relation("Atualizador", fields: [atualizado_por], references: [id])
    criador     Pessoa?   @relation("Criador", fields: [criado_por], references: [id])
    removedor   Pessoa?   @relation("Removedor", fields: [removido_por], references: [id])
    Arquivo     Arquivo[]

    @@map("tipo_documento")
}

model Tag {
    id Int @id @default(autoincrement())

    descricao String
    icone     String?

    arquivo_icone_id Int?
    ArquivoIcone     Arquivo? @relation(fields: [arquivo_icone_id], references: [id])

    pdm_id Int
    pdm    Pdm @relation(fields: [pdm_id], references: [id])

    ods_id Int?
    ods    Ods? @relation(fields: [ods_id], references: [id])

    criado_por     Int?
    criado_em      DateTime  @default(now()) @db.Timestamptz(6)
    atualizado_por Int?
    atualizado_em  DateTime  @default(now()) @db.Timestamptz(6)
    removido_por   Int?
    removido_em    DateTime? @db.Timestamptz(6)

    atualizador Pessoa? @relation("Atualizador", fields: [atualizado_por], references: [id])
    criador     Pessoa? @relation("Criador", fields: [criado_por], references: [id])
    removedor   Pessoa? @relation("Removedor", fields: [removido_por], references: [id])

    @@map("tag")
}

model Tema {
    id Int @id @default(autoincrement())

    descricao String

    pdm_id Int
    pdm    Pdm @relation(fields: [pdm_id], references: [id])

    criado_por     Int?
    criado_em      DateTime  @default(now()) @db.Timestamptz(6)
    atualizado_por Int?
    atualizado_em  DateTime  @default(now()) @db.Timestamptz(6)
    removido_por   Int?
    removido_em    DateTime? @db.Timestamptz(6)

    atualizador Pessoa?     @relation("Atualizador", fields: [atualizado_por], references: [id])
    criador     Pessoa?     @relation("Criador", fields: [criado_por], references: [id])
    removedor   Pessoa?     @relation("Removedor", fields: [removido_por], references: [id])
    Meta        Meta[]
    MetaOrgao   MetaOrgao[]

    @@map("objetivo_estrategico")
}

model Regiao {
    id Int @id @default(autoincrement())

    descricao  String
    shapefile  String?
    nivel      Int
    codigo     Int?
    parente_id Int?

    arquivo_shapefile_id Int?
    ArquivoShapefile     Arquivo? @relation(fields: [arquivo_shapefile_id], references: [id])

    RegiaoAcima Regiao? @relation("Parente", fields: [parente_id], references: [id])

    criado_por     Int?
    criado_em      DateTime  @default(now()) @db.Timestamptz(6)
    atualizado_por Int?
    atualizado_em  DateTime  @default(now()) @db.Timestamptz(6)
    removido_por   Int?
    removido_em    DateTime? @db.Timestamptz(6)

    atualizador   Pessoa?  @relation("Atualizador", fields: [atualizado_por], references: [id])
    criador       Pessoa?  @relation("Criador", fields: [criado_por], references: [id])
    removedor     Pessoa?  @relation("Removedor", fields: [removido_por], references: [id])
    RegioesAbaixo Regiao[] @relation("Parente")

    @@map("regiao")
}

model Arquivo {
    id   Int    @id @default(autoincrement())
    tipo String

    criador           Pessoa?            @relation("Criador", fields: [criado_por], references: [id])
    criado_por        Int?
    criado_em         DateTime           @default(now()) @db.Timestamptz(6)
    caminho           String
    nome_original     String
    tamanho_bytes     Int
    descricao         String?
    tipo_documento_id Int?
    TipoDocumento     TipoDocumento?     @relation(fields: [tipo_documento_id], references: [id])
    Tag               Tag[]
    Regiao            Regiao[]
    ArquivoDocumento  ArquivoDocumento[]

    @@map("arquivo")
}

model ArquivoDocumento {
    id Int @id @default(autoincrement())

    arquivo_id Int
    arquivo    Arquivo @relation(fields: [arquivo_id], references: [id])

    pdm_id Int?
    pdm    Pdm? @relation(fields: [pdm_id], references: [id])

    criado_por     Int?
    criado_em      DateTime  @default(now()) @db.Timestamptz(6)
    atualizado_por Int?
    atualizado_em  DateTime  @default(now()) @db.Timestamptz(6)
    removido_por   Int?
    removido_em    DateTime? @db.Timestamptz(6)

    atualizador Pessoa? @relation("Atualizador", fields: [atualizado_por], references: [id])
    criador     Pessoa? @relation("Criador", fields: [criado_por], references: [id])
    removedor   Pessoa? @relation("Removedor", fields: [removido_por], references: [id])

    @@map("arquivo_documento")
}

model Meta {
    id Int @id @default(autoincrement())

    pdm_id Int
    pdm    Pdm @relation(fields: [pdm_id], references: [id])

    status      String
    codigo      String
    titulo      String
    contexto    String?
    complemento String?

    macro_tema_id Int?
    macro_tema    MacroTema? @relation(fields: [macro_tema_id], references: [id])
    tema_id       Int?
    tema          Tema?      @relation(fields: [tema_id], references: [id])
    sub_tema_id   Int?
    sub_tema      SubTema?   @relation(fields: [sub_tema_id], references: [id])

    ativo Boolean @default(false)

    criado_por     Int?
    criado_em      DateTime  @default(now()) @db.Timestamptz(6)
    atualizado_por Int?
    atualizado_em  DateTime  @default(now()) @db.Timestamptz(6)
    removido_por   Int?
    removido_em    DateTime? @db.Timestamptz(6)

    atualizador     Pessoa?           @relation("Atualizador", fields: [atualizado_por], references: [id])
    criador         Pessoa?           @relation("Criador", fields: [criado_por], references: [id])
    reovedor        Pessoa?           @relation("Desativador", fields: [removido_por], references: [id])
    MetaOrgao       MetaOrgao[]
    MetaResponsavel MetaResponsavel[]

    @@map("meta")
}

model MetaOrgao {
    id Int @id @default(autoincrement())

    meta_id     Int
    meta        Meta    @relation(fields: [meta_id], references: [id])
    responsavel Boolean
    orgao_id    Int
    orgao       Orgao   @relation(fields: [orgao_id], references: [id])
    Tema        Tema?   @relation(fields: [temaId], references: [id])
    temaId      Int?

    @@map("meta_orgao")
}

model MetaResponsavel {
    id Int @id @default(autoincrement())

    meta_id   Int
    meta      Meta   @relation(fields: [meta_id], references: [id])
    pessoa_id Int
    pessoa    Pessoa @relation("MetaPessoaResp", fields: [pessoa_id], references: [id])
    orgao_id  Int
    orgao     Orgao  @relation(fields: [orgao_id], references: [id])

    coorderandor_responsavel_cp Boolean

    @@map("meta_responsavel")
}
