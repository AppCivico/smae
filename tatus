[1mdiff --git a/backend/src/ods/ods.controller.ts b/backend/src/ods/ods.controller.ts[m
[1mindex fdeabdf..63d7c99 100644[m
[1m--- a/backend/src/ods/ods.controller.ts[m
[1m+++ b/backend/src/ods/ods.controller.ts[m
[36m@@ -7,6 +7,7 @@[m [mimport { OdsService } from './ods.service';[m
 import { CreateOdsDto } from './dto/create-ods.dto';[m
 import { UpdateOdsDto } from './dto/update-ods.dto';[m
 import { ListOdsDto } from 'src/ods/dto/list-ods.dto';[m
[32m+[m[32mimport { FindOneParams } from 'src/common/decorators/find-one-params';[m
 [m
 @ApiTags('ODS')[m
 @Controller('ods')[m
[36m@@ -31,8 +32,8 @@[m [mexport class OdsController {[m
     @ApiBearerAuth('access-token')[m
     @ApiUnauthorizedResponse()[m
     @Roles('CadastroOds.editar')[m
[31m-    async update(@Param('id') id: string, @Body() updateOdsDto: UpdateOdsDto, @CurrentUser() user: PessoaFromJwt) {[m
[31m-        return await this.odsService.update(+id, updateOdsDto, user);[m
[32m+[m[32m    async update(@Param() params: FindOneParams, @Body() updateOdsDto: UpdateOdsDto, @CurrentUser() user: PessoaFromJwt) {[m
[32m+[m[32m        return await this.odsService.update(+params.id, updateOdsDto, user);[m
     }[m
 [m
     @Delete(':id')[m
[36m@@ -41,8 +42,8 @@[m [mexport class OdsController {[m
     @Roles('CadastroOds.remover')[m
     @ApiNoContentResponse()[m
     @HttpCode(HttpStatus.NO_CONTENT)[m
[31m-    async remove(@Param('id') id: string, @CurrentUser() user: PessoaFromJwt) {[m
[31m-        await this.odsService.remove(+id, user);[m
[32m+[m[32m    async remove(@Param() params: FindOneParams, @CurrentUser() user: PessoaFromJwt) {[m
[32m+[m[32m        await this.odsService.remove(+params.id, user);[m
         return '';[m
     }[m
 }[m
[1mdiff --git a/backend/src/orgao/orgao.controller.ts b/backend/src/orgao/orgao.controller.ts[m
[1mindex 3bcba8a..651b4a4 100644[m
[1m--- a/backend/src/orgao/orgao.controller.ts[m
[1m+++ b/backend/src/orgao/orgao.controller.ts[m
[36m@@ -7,6 +7,7 @@[m [mimport { ListOrgaoDto } from 'src/orgao/dto/list-orgao.dto';[m
 import { OrgaoService } from './orgao.service';[m
 import { CreateOrgaoDto } from './dto/create-orgao.dto';[m
 import { UpdateOrgaoDto } from './dto/update-orgao.dto';[m
[32m+[m[32mimport { FindOneParams } from 'src/common/decorators/find-one-params';[m
 [m
 @ApiTags('orgao')[m
 @Controller('orgao')[m
[36m@@ -31,8 +32,8 @@[m [mexport class OrgaoController {[m
     @ApiBearerAuth('access-token')[m
     @ApiUnauthorizedResponse()[m
     @Roles('CadastroOrgao.editar')[m
[31m-    async update(@Param('id') id: string, @Body() updateOrgaoDto: UpdateOrgaoDto, @CurrentUser() user: PessoaFromJwt) {[m
[31m-        return await this.orgaoService.update(+id, updateOrgaoDto, user);[m
[32m+[m[32m    async update(@Param() params: FindOneParams, @Body() updateOrgaoDto: UpdateOrgaoDto, @CurrentUser() user: PessoaFromJwt) {[m
[32m+[m[32m        return await this.orgaoService.update(+params.id, updateOrgaoDto, user);[m
     }[m
 [m
     @Delete(':id')[m
[36m@@ -41,8 +42,8 @@[m [mexport class OrgaoController {[m
     @Roles('CadastroOrgao.remover')[m
     @ApiNoContentResponse()[m
     @HttpCode(HttpStatus.NO_CONTENT)[m
[31m-    async remove(@Param('id') id: string, @CurrentUser() user: PessoaFromJwt) {[m
[31m-        await this.orgaoService.remove(+id, user);[m
[32m+[m[32m    async remove(@Param() params: FindOneParams, @CurrentUser() user: PessoaFromJwt) {[m
[32m+[m[32m        await this.orgaoService.remove(+params.id, user);[m
         return '';[m
     }[m
 }[m
[1mdiff --git a/backend/src/pessoa/pessoa.controller.ts b/backend/src/pessoa/pessoa.controller.ts[m
[1mindex 6671333..2dc4d73 100644[m
[1m--- a/backend/src/pessoa/pessoa.controller.ts[m
[1m+++ b/backend/src/pessoa/pessoa.controller.ts[m
[36m@@ -3,6 +3,7 @@[m [mimport { ApiBearerAuth, ApiTags, ApiUnauthorizedResponse } from '@nestjs/swagger[m
 import { CurrentUser } from 'src/auth/decorators/current-user.decorator';[m
 import { Roles } from 'src/auth/decorators/roles.decorator';[m
 import { PessoaFromJwt } from 'src/auth/models/PessoaFromJwt';[m
[32m+[m[32mimport { FindOneParams } from 'src/common/decorators/find-one-params';[m
 import { ListPessoaDto } from 'src/pessoa/dto/list-pessoa.dto';[m
 import { UpdatePessoaDto } from 'src/pessoa/dto/update-pessoa.dto';[m
 import { CreatePessoaDto } from './dto/create-pessoa.dto';[m
[36m@@ -33,16 +34,16 @@[m [mexport class PessoaController {[m
     @ApiBearerAuth('access-token')[m
     @ApiUnauthorizedResponse()[m
     @Roles('CadastroPessoa.editar')[m
[31m-    async update(@Param('id') id: string, @Body() updatePessoaDto: UpdatePessoaDto, @CurrentUser() user: PessoaFromJwt) {[m
[31m-        return await this.pessoaService.update(+id, updatePessoaDto, user);[m
[32m+[m[32m    async update(@Param() params: FindOneParams, @Body() updatePessoaDto: UpdatePessoaDto, @CurrentUser() user: PessoaFromJwt) {[m
[32m+[m[32m        return await this.pessoaService.update(+params.id, updatePessoaDto, user);[m
     }[m
 [m
     @Get(':id')[m
     @ApiBearerAuth('access-token')[m
     @ApiUnauthorizedResponse()[m
     @Roles('CadastroPessoa.inserir', 'CadastroPessoa.editar', 'CadastroPessoa.inativar')[m
[31m-    async get(@Param('id') id: string, @CurrentUser() user: PessoaFromJwt) {[m
[31m-        return await this.pessoaService.getDetail(+id, user);[m
[32m+[m[32m    async get(@Param() params: FindOneParams, @CurrentUser() user: PessoaFromJwt) {[m
[32m+[m[32m        return await this.pessoaService.getDetail(+params.id, user);[m
     }[m
 [m
 }[m
[1mdiff --git a/backend/src/tipo-orgao/tipo-orgao.controller.ts b/backend/src/tipo-orgao/tipo-orgao.controller.ts[m
[1mindex deb68e4..4380e48 100644[m
[1m--- a/backend/src/tipo-orgao/tipo-orgao.controller.ts[m
[1m+++ b/backend/src/tipo-orgao/tipo-orgao.controller.ts[m
[36m@@ -7,6 +7,7 @@[m [mimport { TipoOrgaoService } from './tipo-orgao.service';[m
 import { CreateTipoOrgaoDto } from './dto/create-tipo-orgao.dto';[m
 import { UpdateTipoOrgaoDto } from './dto/update-tipo-orgao.dto';[m
 import { ListTipoOrgaoDto } from 'src/tipo-orgao/dto/list-tipo-orgao.dto';[m
[32m+[m[32mimport { FindOneParams } from 'src/common/decorators/find-one-params';[m
 [m
 @ApiTags('tipoOrgao')[m
 @Controller('tipo-orgao')[m
[36m@@ -31,8 +32,8 @@[m [mexport class TipoOrgaoController {[m
     @ApiBearerAuth('access-token')[m
     @ApiUnauthorizedResponse()[m
     @Roles('CadastroTipoOrgao.editar')[m
[31m-    async update(@Param('id') id: string, @Body() updateTipoOrgaoDto: UpdateTipoOrgaoDto, @CurrentUser() user: PessoaFromJwt) {[m
[31m-        return await this.tipoOrgaoService.update(+id, updateTipoOrgaoDto, user);[m
[32m+[m[32m    async update(@Param() params: FindOneParams, @Body() updateTipoOrgaoDto: UpdateTipoOrgaoDto, @CurrentUser() user: PessoaFromJwt) {[m
[32m+[m[32m        return await this.tipoOrgaoService.update(+params.id, updateTipoOrgaoDto, user);[m
     }[m
 [m
     @Delete(':id')[m
[36m@@ -41,8 +42,8 @@[m [mexport class TipoOrgaoController {[m
     @Roles('CadastroTipoOrgao.remover')[m
     @ApiNoContentResponse()[m
     @HttpCode(HttpStatus.NO_CONTENT)[m
[31m-    async remove(@Param('id') id: string, @CurrentUser() user: PessoaFromJwt) {[m
[31m-        await this.tipoOrgaoService.remove(+id, user);[m
[32m+[m[32m    async remove(@Param() params: FindOneParams, @CurrentUser() user: PessoaFromJwt) {[m
[32m+[m[32m        await this.tipoOrgaoService.remove(+params.id, user);[m
         return '';[m
     }[m
 }[m
